/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NFTAuction,
  NFTAuctionInterface,
} from "../../../contracts/auctionContract.sol/NFTAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAuAToken",
        name: "_paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "contract IAuANFT",
        name: "_NftContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "winningBid",
        type: "uint256",
      },
    ],
    name: "AuctionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyTokenWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newListingFee",
        type: "uint256",
      },
    ],
    name: "ListingFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "listingFee",
        type: "uint256",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "NftContractAddress",
    outputs: [
      {
        internalType: "contract IAuANFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctionTokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "contract IAuANFT",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startingPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "emergencyWithdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "endAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAuctionTokenIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAuctionsDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "contract IAuANFT",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "highestBid",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "ended",
            type: "bool",
          },
        ],
        internalType: "struct NFTAuction.Auction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getAuctionDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "contract IAuANFT",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startingPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "highestBidder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "highestBid",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "ended",
            type: "bool",
          },
        ],
        internalType: "struct NFTAuction.Auction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getNFTMetadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserNFTs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "innerAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startingPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "listNFTForAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentTokenAddress",
    outputs: [
      {
        internalType: "contract IAuAToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bidAmount",
        type: "uint256",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingFee",
        type: "uint256",
      },
    ],
    name: "setListingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userNFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620030a2380380620030a2833981810160405281019062000037919062000270565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002b7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b6000620001f382620001d2565b9050919050565b6200020581620001e6565b81146200021157600080fd5b50565b6000815190506200022581620001fa565b92915050565b60006200023882620001d2565b9050919050565b6200024a816200022b565b81146200025657600080fd5b50565b6000815190506200026a816200023f565b92915050565b600080604083850312156200028a5762000289620001ad565b5b60006200029a8582860162000214565b9250506020620002ad8582860162000259565b9150509250929050565b612ddb80620002c76000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806384536017116100b8578063afb18fe71161007c578063afb18fe714610333578063b8fe6abe14610351578063b9a2de3a1461036f578063f20e5e351461038b578063f2fde38b146103bb578063fdc5ab8e146103d757610142565b8063845360171461029f5780638da5cb5b146102a957806398e0363b146102c75780639941c152146102f75780639f91467b1461031557610142565b806340c442de1161010a57806340c442de146101d957806350c6474b146101f5578063571a26a01461021157806357c90de5146102495780636be9a6f114610265578063715018a61461029557610142565b8063131dbd091461014757806314f710fe146101635780631f1c1e4b1461016d578063291c73c31461018b57806338d90f17146101bb575b600080fd5b610161600480360381019061015c9190611d53565b6103f5565b005b61016b61043e565b005b610175610556565b6040516101829190611fb1565b60405180910390f35b6101a560048036038101906101a09190611fff565b610620565b6040516101b2919061204e565b60405180910390f35b6101c3610651565b6040516101d09190612118565b60405180910390f35b6101f360048036038101906101ee919061213a565b6106a9565b005b61020f600480360381019061020a9190612167565b610863565b005b61022b60048036038101906102269190611d53565b610e4d565b604051610240999897969594939291906121fb565b60405180910390f35b610263600480360381019061025e9190612288565b610f08565b005b61027f600480360381019061027a9190611d53565b61121c565b60405161028c9190612358565b60405180910390f35b61029d6113d6565b005b6102a76113ea565b005b6102b1611497565b6040516102be919061237a565b60405180910390f35b6102e160048036038101906102dc9190611d53565b6114c0565b6040516102ee919061204e565b60405180910390f35b6102ff6114e4565b60405161030c919061204e565b60405180910390f35b61031d6114ea565b60405161032a9190612395565b60405180910390f35b61033b611510565b60405161034891906123d1565b60405180910390f35b610359611536565b604051610366919061204e565b60405180910390f35b61038960048036038101906103849190611d53565b611540565b005b6103a560048036038101906103a09190611d53565b611767565b6040516103b291906124a3565b60405180910390f35b6103d560048036038101906103d0919061213a565b6119eb565b005b6103df611a6e565b6040516103ec9190612118565b60405180910390f35b6103fd611b03565b806007819055507f5fb4654f1efe30c6141eaa6855ffcb27e0b361d899b05e21b1a4d0b3e71e14db81604051610433919061204e565b60405180910390a150565b60003390506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842836040518263ffffffff1660e01b81526004016104a0919061237a565b6020604051808303816000875af11580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e391906124d4565b905080600381905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b60606000610562610651565b90506000815167ffffffffffffffff81111561058157610580612501565b5b6040519080825280602002602001820160405280156105ba57816020015b6105a7611c79565b81526020019060019003908161059f5790505b50905060005b8251811015610617576105ec8382815181106105df576105de612530565b5b6020026020010151611767565b8282815181106105ff576105fe612530565b5b602002602001018190525080806001019150506105c0565b50809250505090565b6006602052816000526040600020818154811061063c57600080fd5b90600052602060002001600091509150505481565b6060600480548060200260200160405190810160405280929190818152602001828054801561069f57602002820191906000526020600020905b81548152602001906001019080831161068b575b5050505050905090565b6106b1611b03565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106ec919061237a565b602060405180830381865afa158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d91906124d4565b90508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610753611497565b836040518363ffffffff1660e01b815260040161077192919061255f565b6020604051808303816000875af1158015610790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b491906125b4565b6107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea9061262d565b60405180910390fd5b6107fb611497565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa4e7b83d59f83358c69c32a951cf5f617e749b38fdb1e2ff13524b83ffd42c9983604051610857919061204e565b60405180910390a35050565b600754600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108c1919061237a565b602060405180830381865afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090291906124d4565b11610942576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610939906126bf565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b81526004016109b4919061204e565b602060405180830381865afa1580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f591906126f4565b73ffffffffffffffffffffffffffffffffffffffff1614610a4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a429061276d565b60405180910390fd5b6005600085815260200190815260200160002060080160009054906101000a900460ff1615610aaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa6906127ff565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306007546040518463ffffffff1660e01b8152600401610b109392919061281f565b6020604051808303816000875af1158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5391906125b4565b506040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018342610bd29190612885565b8152602001828442610be49190612885565b610bee9190612885565b8152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152506005600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e082015181600701556101008201518160080160006101000a81548160ff021916908315150217905550905050610d6584611b81565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610dc49392919061281f565b600060405180830381600087803b158015610dde57600080fd5b505af1158015610df2573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff16847f5f9c03de076f5063cd3ebcfe8ef7aa8af378e4b35a83c77ba9777e97083879a2600754604051610e3f919061204e565b60405180910390a350505050565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070154908060080160009054906101000a900460ff16905089565b60006005600084815260200190815260200160002090508060080160009054906101000a900460ff1615610f71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6890612905565b60405180910390fd5b80600701548211610fb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fae90612997565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016110169392919061281f565b6020604051808303816000875af1158015611035573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105991906125b4565b50600073ffffffffffffffffffffffffffffffffffffffff168160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461117c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600701546040518363ffffffff1660e01b815260040161113792919061255f565b6020604051808303816000875af1158015611156573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117a91906125b4565b505b338160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600701819055503373ffffffffffffffffffffffffffffffffffffffff16837f0e54eff26401bf69b81b26f60bd85ef47f5d85275c1d268d84f68d6897431c478460405161120f919061204e565b60405180910390a3505050565b6060600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401611291919061204e565b602060405180830381865afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d291906126f4565b73ffffffffffffffffffffffffffffffffffffffff1603611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131f90612a03565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c87b56dd846040518263ffffffff1660e01b8152600401611385919061204e565b600060405180830381865afa1580156113a2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906113cb9190612b1a565b905080915050919050565b6113de611b03565b6113e86000611bad565b565b6113f2611b03565b6113fa611497565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561143f573d6000803e3d6000fd5b50611448611497565b73ffffffffffffffffffffffffffffffffffffffff167f23d6711a1d031134a36921253c75aa59e967d38e369ac625992824315e204f204760405161148d919061204e565b60405180910390a2565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600481815481106114d057600080fd5b906000526020600020016000915090505481565b60035481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600754905090565b60006005600083815260200190815260200160002090508060080160009054906101000a900460ff16156115a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a090612baf565b60405180910390fd5b80600501544210156115f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e790612c1b565b60405180910390fd5b60018160080160006101000a81548160ff0219169083151502179055508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600201546040518463ffffffff1660e01b81526004016116ba9392919061281f565b600060405180830381600087803b1580156116d457600080fd5b505af11580156116e8573d6000803e3d6000fd5b505050508060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827fd2aa34a4fdbbc6dff6a3e56f46e0f3ae2a31d7785ff3487aa5c95c642acea501836007015460405161175b919061204e565b60405180910390a35050565b61176f611c79565b60006005600084815260200190815260200160002060020154036117c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bf90612c87565b60405180910390fd5b600060056000848152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600782015481526020016008820160009054906101000a900460ff1615151515815250509050604051806101200160405280826000015173ffffffffffffffffffffffffffffffffffffffff168152602001826020015173ffffffffffffffffffffffffffffffffffffffff1681526020018260400151815260200182606001518152602001826080015181526020018260a0015181526020018260c0015173ffffffffffffffffffffffffffffffffffffffff1681526020018260e0015181526020018261010001511515815250915050919050565b6119f3611b03565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5990612d19565b60405180910390fd5b611a6b81611bad565b50565b6060600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611af957602002820191906000526020600020905b815481526020019060010190808311611ae5575b5050505050905090565b611b0b611c71565b73ffffffffffffffffffffffffffffffffffffffff16611b29611497565b73ffffffffffffffffffffffffffffffffffffffff1614611b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7690612d85565b60405180910390fd5b565b600481908060018154018082558091505060019003906000526020600020016000909190919091505550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611d3081611d1d565b8114611d3b57600080fd5b50565b600081359050611d4d81611d27565b92915050565b600060208284031215611d6957611d68611d13565b5b6000611d7784828501611d3e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611dd782611dac565b9050919050565b611de781611dcc565b82525050565b6000819050919050565b6000611e12611e0d611e0884611dac565b611ded565b611dac565b9050919050565b6000611e2482611df7565b9050919050565b6000611e3682611e19565b9050919050565b611e4681611e2b565b82525050565b611e5581611d1d565b82525050565b60008115159050919050565b611e7081611e5b565b82525050565b61012082016000820151611e8d6000850182611dde565b506020820151611ea06020850182611e3d565b506040820151611eb36040850182611e4c565b506060820151611ec66060850182611e4c565b506080820151611ed96080850182611e4c565b5060a0820151611eec60a0850182611e4c565b5060c0820151611eff60c0850182611dde565b5060e0820151611f1260e0850182611e4c565b50610100820151611f27610100850182611e67565b50505050565b6000611f398383611e76565b6101208301905092915050565b6000602082019050919050565b6000611f5e82611d80565b611f688185611d8b565b9350611f7383611d9c565b8060005b83811015611fa4578151611f8b8882611f2d565b9750611f9683611f46565b925050600181019050611f77565b5085935050505092915050565b60006020820190508181036000830152611fcb8184611f53565b905092915050565b611fdc81611dcc565b8114611fe757600080fd5b50565b600081359050611ff981611fd3565b92915050565b6000806040838503121561201657612015611d13565b5b600061202485828601611fea565b925050602061203585828601611d3e565b9150509250929050565b61204881611d1d565b82525050565b6000602082019050612063600083018461203f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006120a18383611e4c565b60208301905092915050565b6000602082019050919050565b60006120c582612069565b6120cf8185612074565b93506120da83612085565b8060005b8381101561210b5781516120f28882612095565b97506120fd836120ad565b9250506001810190506120de565b5085935050505092915050565b6000602082019050818103600083015261213281846120ba565b905092915050565b6000602082840312156121505761214f611d13565b5b600061215e84828501611fea565b91505092915050565b6000806000806080858703121561218157612180611d13565b5b600061218f87828801611d3e565b94505060206121a087828801611d3e565b93505060406121b187828801611d3e565b92505060606121c287828801611d3e565b91505092959194509250565b6121d781611dcc565b82525050565b6121e681611e2b565b82525050565b6121f581611e5b565b82525050565b600061012082019050612211600083018c6121ce565b61221e602083018b6121dd565b61222b604083018a61203f565b612238606083018961203f565b612245608083018861203f565b61225260a083018761203f565b61225f60c08301866121ce565b61226c60e083018561203f565b61227a6101008301846121ec565b9a9950505050505050505050565b6000806040838503121561229f5761229e611d13565b5b60006122ad85828601611d3e565b92505060206122be85828601611d3e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123025780820151818401526020810190506122e7565b60008484015250505050565b6000601f19601f8301169050919050565b600061232a826122c8565b61233481856122d3565b93506123448185602086016122e4565b61234d8161230e565b840191505092915050565b60006020820190508181036000830152612372818461231f565b905092915050565b600060208201905061238f60008301846121ce565b92915050565b60006020820190506123aa60008301846121dd565b92915050565b60006123bb82611e19565b9050919050565b6123cb816123b0565b82525050565b60006020820190506123e660008301846123c2565b92915050565b610120820160008201516124036000850182611dde565b5060208201516124166020850182611e3d565b5060408201516124296040850182611e4c565b50606082015161243c6060850182611e4c565b50608082015161244f6080850182611e4c565b5060a082015161246260a0850182611e4c565b5060c082015161247560c0850182611dde565b5060e082015161248860e0850182611e4c565b5061010082015161249d610100850182611e67565b50505050565b6000610120820190506124b960008301846123ec565b92915050565b6000815190506124ce81611d27565b92915050565b6000602082840312156124ea576124e9611d13565b5b60006124f8848285016124bf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060408201905061257460008301856121ce565b612581602083018461203f565b9392505050565b61259181611e5b565b811461259c57600080fd5b50565b6000815190506125ae81612588565b92915050565b6000602082840312156125ca576125c9611d13565b5b60006125d88482850161259f565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b60006126176015836122d3565b9150612622826125e1565b602082019050919050565b600060208201905081810360008301526126468161260a565b9050919050565b7f596f7520646f6e2774206861766520656e6f7567682041754120746f20636f7660008201527f657220746865206c697374696e67204665650000000000000000000000000000602082015250565b60006126a96032836122d3565b91506126b48261264d565b604082019050919050565b600060208201905081810360008301526126d88161269c565b9050919050565b6000815190506126ee81611fd3565b92915050565b60006020828403121561270a57612709611d13565b5b6000612718848285016126df565b91505092915050565b7f546865204e465420646f65736e27742062656c6f6e6720746f20796f75000000600082015250565b6000612757601d836122d3565b915061276282612721565b602082019050919050565b600060208201905081810360008301526127868161274a565b9050919050565b7f4e465420697320616c726561647920696e20616e20616374697665206175637460008201527f696f6e0000000000000000000000000000000000000000000000000000000000602082015250565b60006127e96023836122d3565b91506127f48261278d565b604082019050919050565b60006020820190508181036000830152612818816127dc565b9050919050565b600060608201905061283460008301866121ce565b61284160208301856121ce565b61284e604083018461203f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061289082611d1d565b915061289b83611d1d565b92508282019050808211156128b3576128b2612856565b5b92915050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b60006128ef6011836122d3565b91506128fa826128b9565b602082019050919050565b6000602082019050818103600083015261291e816128e2565b9050919050565b7f42696420616d6f756e74206d7573742062652067726561746572207468616e2060008201527f7468652063757272656e74206869676865737420626964000000000000000000602082015250565b60006129816037836122d3565b915061298c82612925565b604082019050919050565b600060208201905081810360008301526129b081612974565b9050919050565b7f4e465420646f6573206e6f742065786973740000000000000000000000000000600082015250565b60006129ed6012836122d3565b91506129f8826129b7565b602082019050919050565b60006020820190508181036000830152612a1c816129e0565b9050919050565b600080fd5b600080fd5b612a368261230e565b810181811067ffffffffffffffff82111715612a5557612a54612501565b5b80604052505050565b6000612a68611d09565b9050612a748282612a2d565b919050565b600067ffffffffffffffff821115612a9457612a93612501565b5b612a9d8261230e565b9050602081019050919050565b6000612abd612ab884612a79565b612a5e565b905082815260208101848484011115612ad957612ad8612a28565b5b612ae48482856122e4565b509392505050565b600082601f830112612b0157612b00612a23565b5b8151612b11848260208601612aaa565b91505092915050565b600060208284031215612b3057612b2f611d13565b5b600082015167ffffffffffffffff811115612b4e57612b4d611d18565b5b612b5a84828501612aec565b91505092915050565b7f41756374696f6e2068617320616c726561647920656e64656400000000000000600082015250565b6000612b996019836122d3565b9150612ba482612b63565b602082019050919050565b60006020820190508181036000830152612bc881612b8c565b9050919050565b7f41756374696f6e20686173206e6f7420656e6465642079657400000000000000600082015250565b6000612c056019836122d3565b9150612c1082612bcf565b602082019050919050565b60006020820190508181036000830152612c3481612bf8565b9050919050565b7f41756374696f6e20646f6573206e6f7420657869737400000000000000000000600082015250565b6000612c716016836122d3565b9150612c7c82612c3b565b602082019050919050565b60006020820190508181036000830152612ca081612c64565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612d036026836122d3565b9150612d0e82612ca7565b604082019050919050565b60006020820190508181036000830152612d3281612cf6565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612d6f6020836122d3565b9150612d7a82612d39565b602082019050919050565b60006020820190508181036000830152612d9e81612d62565b905091905056fea264697066735822122006112c4248e3fc197838768ec5ada9c51c9aeef91967166f60276bf5c040208364736f6c63430008160033";

type NFTAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTAuction__factory extends ContractFactory {
  constructor(...args: NFTAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _paymentTokenAddress: AddressLike,
    _NftContractAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _paymentTokenAddress,
      _NftContractAddress,
      overrides || {}
    );
  }
  override deploy(
    _paymentTokenAddress: AddressLike,
    _NftContractAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _paymentTokenAddress,
      _NftContractAddress,
      overrides || {}
    ) as Promise<
      NFTAuction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTAuction__factory {
    return super.connect(runner) as NFTAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTAuctionInterface {
    return new Interface(_abi) as NFTAuctionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NFTAuction {
    return new Contract(address, _abi, runner) as unknown as NFTAuction;
  }
}
